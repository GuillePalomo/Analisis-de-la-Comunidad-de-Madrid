library(moments)
library(ggplot2)
library(ggpubr)
library(survey)
library(sp)
library(sampling)
library(mase)
datos <- read.table("datosECV_ComMadrid.txt")
names(datos) <- datos[1,]
datos <- datos[-1,]
rownames(datos) <- 1:nrow(datos)
genero <- as.numeric(datos$datosECVmas16.gen)
edad <- as.numeric(datos$edad)
nac <- as.numeric(datos$nac)
neduc <- as.numeric(datos$neduc)
sitlab <- as.numeric(datos$sitlab)
factel <- as.numeric(datos$factorel)
genero1 <- genero
neduc1 <- neduc
sitlab1 <- sitlab
edad1 <- edad
nac1 <- nac
genero1[genero1 == 1] <- "Masc"
genero1[genero1 == 2] <- "Fem"
neduc1[neduc1 == 1] <- "Prim"
neduc1[neduc1 == 2] <- "Sec"
neduc1[neduc1 == 3] <- "Postsec"
sitlab1[sitlab1 == 1] <- "Trabaja"
sitlab1[sitlab1 == 2] <- "Desemp"
sitlab1[sitlab1 == 3] <- "Inact"
edad1[edad1 == 1] <- "16-24"
edad1[edad1 == 2] <- "25-49"
edad1[edad1 == 3] <- "15-64"
edad1[edad1 == 4] <- "+65"
nac1[nac1 == 1] <- "Españoles"
nac1[nac1 == 2] <- "Otros"
N <- sum(factel)
NH <- sum(factel[genero == 1])
NM <- sum(factel[genero == 2])
# Tamaño muestral de cada estrato
t1 <- round(1/10*length(neduc[neduc == 1]),0)
t2 <- round(1/10*length(neduc[neduc == 2]),0)
t3 <- round(1/10*length(neduc[neduc == 3]),0)
s <- strata(datos, "neduc", size = c(t1, t2, t3), method = "srswor")
# Se extraen las observaciones de la población original
strat_Poblacion = getdata(datos, s)
strat_Poblacion$pobtam = with(strat_Poblacion, ifelse(neduc=="1", n1,ifelse(neduc == "2", n2, n3)))
# Tamaño muestral de cada estrato
t1 <- round(1/10*length(neduc[neduc == 1]),0)
t2 <- round(1/10*length(neduc[neduc == 2]),0)
t3 <- round(1/10*length(neduc[neduc == 3]),0)
s <- strata(datos, "neduc", size = c(t1, t2, t3), method = "srswor")
# Se extraen las observaciones de la población original
strat_Poblacion = getdata(datos, s)
strat_Poblacion$pobtam = with(strat_Poblacion, ifelse(neduc == 1, n1,ifelse(neduc == 2, n2, n3)))
n1 <- length(neduc[neduc == 1])
n2 <- length(neduc[neduc == 2])
n3 <- length(neduc[neduc == 3])
t1 <- round(1/10*n1,0)
t2 <- round(1/10*n2,0)
t3 <- round(1/10*n3,0)
s <- strata(datos, "neduc", size = c(t1, t2, t3), method = "srswor")
# Se extraen las observaciones de la población original
strat_pob = getdata(datos, s)
strat_pob$pobtam = with(strat_pob, ifelse(neduc=="1", n1,ifelse(neduc == "2",
n2, n3)))
strat_pob$mispesos = 1/strat_pob$Prob
dstrata = svydesign(id=~1, weights=~mispesos, fpc=~pobtam, strat=~neduc, data
=strat_pob)
summary(dstrata)
sqrt(var(ingresos[neduc == 1])
knitr::opts_chunk$set(echo = TRUE)
#Preparación de datos
library(moments)
library(ggplot2)
library(ggpubr)
library(survey)
library(sp)
library(sampling)
datos <- read.table("datosECV_ComMadrid.txt")
names(datos) <- datos[1,]
datos <- datos[-1,]
rownames(datos) <- 1:nrow(datos)
genero <- as.numeric(datos$datosECVmas16.gen)
edad <- as.numeric(datos$edad)
nac <- as.numeric(datos$nac)
neduc <- as.numeric(datos$neduc)
sitlab <- as.numeric(datos$sitlab)
factel <- as.numeric(datos$factorel)
genero1 <- genero
neduc1 <- neduc
sitlab1 <- sitlab
edad1 <- edad
nac1 <- nac
genero1[genero1 == 1] <- "Masc"
genero1[genero1 == 2] <- "Fem"
neduc1[neduc1 == 1] <- "Prim"
neduc1[neduc1 == 2] <- "Sec"
neduc1[neduc1 == 3] <- "Postsec"
sitlab1[sitlab1 == 1] <- "Trabaja"
sitlab1[sitlab1 == 2] <- "Desemp"
sitlab1[sitlab1 == 3] <- "Inact"
edad1[edad1 == 1] <- "16-24"
edad1[edad1 == 2] <- "25-49"
edad1[edad1 == 3] <- "15-64"
edad1[edad1 == 4] <- "+65"
nac1[nac1 == 1] <- "Españoles"
nac1[nac1 == 2] <- "Otros"
N <- sum(factel)
NH <- sum(factel[genero == 1])
NM <- sum(factel[genero == 2])
knitr::opts_chunk$set(echo = TRUE)
sqrt(var(ingresos[neduc == 1])
nneducs <- c(length(neduc[neduc == 1]), length(neduc[neduc == 2]), length(neduc[neduc == 3]))
knitr::opts_chunk$set(echo = TRUE)
#Preparación de datos
library(moments)
library(ggplot2)
library(ggpubr)
library(survey)
library(sp)
library(sampling)
datos <- read.table("datosECV_ComMadrid.txt")
names(datos) <- datos[1,]
datos <- datos[-1,]
rownames(datos) <- 1:nrow(datos)
genero <- as.numeric(datos$datosECVmas16.gen)
edad <- as.numeric(datos$edad)
nac <- as.numeric(datos$nac)
neduc <- as.numeric(datos$neduc)
sitlab <- as.numeric(datos$sitlab)
factel <- as.numeric(datos$factorel)
genero1 <- genero
neduc1 <- neduc
sitlab1 <- sitlab
edad1 <- edad
nac1 <- nac
genero1[genero1 == 1] <- "Masc"
genero1[genero1 == 2] <- "Fem"
neduc1[neduc1 == 1] <- "Prim"
neduc1[neduc1 == 2] <- "Sec"
neduc1[neduc1 == 3] <- "Postsec"
sitlab1[sitlab1 == 1] <- "Trabaja"
sitlab1[sitlab1 == 2] <- "Desemp"
sitlab1[sitlab1 == 3] <- "Inact"
edad1[edad1 == 1] <- "16-24"
edad1[edad1 == 2] <- "25-49"
edad1[edad1 == 3] <- "15-64"
edad1[edad1 == 4] <- "+65"
nac1[nac1 == 1] <- "Españoles"
nac1[nac1 == 2] <- "Otros"
N <- sum(factel)
NH <- sum(factel[genero == 1])
NM <- sum(factel[genero == 2])
#Gráfico para el género
genero_grafico <- c(round((length(genero[genero == 1])/length(genero))*100,2), round((length(genero[genero == 2])/length(genero))*100,2))
pie(genero_grafico, main = "Género", clockwise = T, labels = paste(genero_grafico,"%"), col = c("lightblue", "pink"))
legend("bottomright", legend = c("Hombres","Mujeres"), fill = c("lightblue", "pink"))
#Gráfico para la edad
Graf_edad <- barplot(table(edad), col = "paleturquoise1", ylim = c(0,800), main = "Edad", names.arg = c("16-24","25-49","50-64","+65"), ylab = "Frecuencia", xlab = "Grupos de edades")
text(Graf_edad, table(edad)/1.3, labels = table(edad))
text(Graf_edad, table(edad)/3, labels = paste(round(table(edad)/length(edad)*100,2),"%"))
#Gráfico para la nacionalidad
nac_grafico <- c(round((length(nac[nac == 1])/length(nac))*100,2), round((length(nac[nac == 2])/length(nac))*100,2))
pie(nac_grafico, main = "Nacionalidad", clockwise = T, labels = paste(nac_grafico,"%"), col = c("red", "yellow"))
legend("bottomright", legend = c("España","Otros"), fill = c("red", "yellow"))
#Gráfico para el nivel de educación
neduc_grafico <- c(round((length(neduc[neduc == 1])/length(neduc))*100,2), round((length(neduc[neduc == 2])/length(neduc))*100,2), round((length(neduc[neduc == 3])/length(neduc))*100,2))
pie(neduc_grafico, main = "Nivel educativo", clockwise = T, labels = paste(neduc_grafico,"%"), col = c("green", "seagreen", "olivedrab"))
legend("bottomright", legend = c("Prim","Sec","Postsec"), fill = c("green", "seagreen", "olivedrab"))
#Gráfico para la situación laboral
sitlab_grafico <- c(round((length(sitlab[sitlab == 1])/length(sitlab))*100,2), round((length(sitlab[sitlab == 2])/length(sitlab))*100,2), round((length(sitlab[sitlab == 3])/length(sitlab))*100,2))
pie(sitlab_grafico, main = "Situación laboral", clockwise = T, labels = paste(sitlab_grafico,"%"), col = c("lightblue", "skyblue", "slateblue"))
legend("bottomright", legend = c("Trabaj","Desemp","Inact"), fill = c("lightblue", "skyblue", "slateblue"))
#Gráfico para los ingresos
ingresos <- as.numeric(datos$ingnorm)
hist(ingresos, main = NULL)
#Tabla ingresos
intervalos_salarios <- c()
for(i in 1:length(ingresos)){
if(ingresos[i] <= 6000) {
intervalos_salarios <- c(intervalos_salarios,"-6000") }
if(ingresos[i] <= 12000 & ingresos[i] > 6000) {
intervalos_salarios <- c(intervalos_salarios,"6000-12000") }
if(ingresos[i] <= 18000 & ingresos[i] > 12000) {
intervalos_salarios <- c(intervalos_salarios,"12000-18000") }
if(ingresos[i] <= 24000 & ingresos[i] > 18000) {
intervalos_salarios <- c(intervalos_salarios,"18000-24000")}
if(ingresos[i] > 24000) {
intervalos_salarios <- c(intervalos_salarios,"+24000")}
}
intervalos <- as.data.frame(table(intervalos_salarios))
int <- c("-6000","6000-12000","12000-18000","18000-24000","+24000")
intervalos <- intervalos[match(int,intervalos$intervalos_salarios),]
rownames(intervalos) <- 1:nrow(intervalos)
knitr::kable(intervalos)
#Gráfico para las horas de trabajo
horas <- as.numeric(datos$horas[datos$sitlab == 1])
Media_horas <- mean(horas)
hist(horas, main = NULL)
#Tabla ingresos según nivel
IE <- round(table(intervalos_salarios,neduc1),4)
knitr::kable(IE)
#Medidas
media_ing <- mean(ingresos)
mediana_ing <- median(ingresos)
var_ing <- var(ingresos)
desv_ing <- sqrt(var_ing)
IQR_ing <- IQR(ingresos)
asimetria_ing <- skewness(ingresos)
curtosis_ing <- kurtosis(ingresos)
#Medidas según nivel
media_ing1 <- mean(ingresos[neduc == 1])
mediana_ing1 <- median(ingresos[neduc == 1])
media_ing2 <- mean(ingresos[neduc == 2])
mediana_ing2 <- median(ingresos[neduc == 2])
media_ing3 <- mean(ingresos[neduc == 3])
mediana_ing3 <- median(ingresos[neduc == 3])
var_ing1 <- var(ingresos[neduc == 1])
desv_ing1 <- sqrt(var_ing1)
IQR_ing1 <- IQR(ingresos[neduc == 1])
var_ing2 <- var(ingresos[neduc == 2])
desv_ing2 <- sqrt(var_ing2)
IQR_ing2 <- IQR(ingresos[neduc == 2])
var_ing3 <- var(ingresos[neduc == 3])
desv_ing3 <- sqrt(var_ing3)
IQR_ing3 <- IQR(ingresos[neduc == 3])
asimetria_ing1 <- skewness(ingresos[neduc == 1])
curtosis_ing1 <- kurtosis(ingresos[neduc == 1])
asimetria_ing2 <- skewness(ingresos[neduc == 2])
curtosis_ing2 <- kurtosis(ingresos[neduc == 2])
asimetria_ing3 <- skewness(ingresos[neduc == 3])
curtosis_ing3 <- kurtosis(ingresos[neduc == 3])
#Gráficos ingresos
ing_dat <- as.data.frame(ingresos)
Hist_ing <- ggplot(data = ing_dat, aes(x = ingresos)) +
geom_histogram(aes(y = ..density..), fill = "lightblue", color = "black") +
geom_density( size = 1, col = "blue") +
ggtitle("Histograma de ingresos normalizados") +
geom_vline(aes(xintercept = mean(ingresos), col = "Media"), linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median(ingresos),  col = "Mediana"), size = 1) +
scale_color_manual(name = "", values = c("Media" = "black", "Mediana" = "red"))
Hist_ing
prob_graf = rnorm(length(ingresos),media_ing,desv_ing)
qqnorm(prob_graf, main = "Ingresos")
qqline(prob_graf, col = "green")
boxplot(ingresos, xlab = "Ingresos")
#Gráficos ingresos según nivel
ing_neduc_dat <- data.frame(ingresos, neduc)
Hist_ing1 <- ggplot(data = as.data.frame(ing_neduc_dat$ingresos[neduc == 1]), aes(x = ingresos[neduc == 1])) +
geom_histogram(aes(y = ..density..), fill = "lightblue", color = "black") +
geom_density( size = 1, col = "blue") +
geom_vline(aes(xintercept = mean(ingresos), col = "Media"), linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median(ingresos),  col = "Mediana"), size = 1) +
xlab("Primaria") +
scale_color_manual(name = "", values = c("Media" = "black", "Mediana" = "red"))
Hist_ing1
Hist_ing2 <- ggplot(data = as.data.frame(ing_neduc_dat$ingresos[neduc == 2]), aes(x = ingresos[neduc == 2])) +
geom_histogram(aes(y = ..density..), fill = "lightblue", color = "black") +
geom_density( size = 1, col = "blue") +
geom_vline(aes(xintercept = mean(ingresos), col = "Media"), linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median(ingresos),  col = "Mediana"), size = 1) +
xlab("Secundaria") +
scale_color_manual(name = "", values = c("Media" = "black", "Mediana" = "red"))
Hist_ing2
Hist_ing3 <- ggplot(data = as.data.frame(ing_neduc_dat$ingresos[neduc == 3]), aes(x = ingresos[neduc == 3])) +
geom_histogram(aes(y = ..density..), fill = "lightblue", color = "black") +
geom_density( size = 1, col = "blue") +
geom_vline(aes(xintercept = mean(ingresos), col = "Media"), linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median(ingresos),  col = "Mediana"), size = 1) +
xlab("Postsecundaria") +
scale_color_manual(name = "", values = c("Media" = "black", "Mediana" = "red"))
Hist_ing3
prob_graf1 = rnorm(length(ingresos),media_ing1,desv_ing1)
qqnorm(prob_graf1, main = "Ingresos con primaria")
qqline(prob_graf1, col = "green")
prob_graf2 = rnorm(length(ingresos),media_ing2,desv_ing2)
qqnorm(prob_graf2, main = "Ingresos con secundaria")
qqline(prob_graf2, col = "green")
prob_graf3 = rnorm(length(ingresos),media_ing3,desv_ing3)
qqnorm(prob_graf3, main = "Ingresos con postsecundaria")
qqline(prob_graf3, col = "green")
boxplot(ingresos ~ neduc, xlab = "Nivel educativo")
#Tablas de contingencia
x <- round(prop.table(table(edad1,sitlab1)),4)
knitr::kable(x)
y <- round(prop.table(table(genero1,sitlab1)),4)
knitr::kable(y)
z <- round(prop.table(table(nac1,neduc1)),4)
knitr::kable(z)
#Gráfico de mosaico
datos1 <- data.frame(genero1,neduc1,sitlab1)
mosaicplot(~genero1 + neduc1 + sitlab1, main = NULL, xlab = "Género", ylab = "Nivel educativo", off = 22)
est <- (1/N)*(sum(ingresos*(factel)))
est
media_ing
estvar_ing <- sum(((1-(1/factel))/((1/factel)^2))*(ingresos/N)^2)
estdesv_ing <- sqrt(estvar_ing)
estdesv_ing
estcoef <- estdesv_ing/est
estcoef
D <- estdesv_ing/sqrt(1-0.95)
IntTcheb <- c(est - D, est + D)
IntTcheb
t <- qt(0.975, length(ingresos))
IntAp <- c(est - estdesv_ing * t, est + estdesv_ing * t)
IntAp
estH <- 1/NH*(sum(ingresos[genero == 1]*(factel[genero == 1])))
estM <- 1/NM*(sum(ingresos[genero == 2]*(factel[genero == 2])))
estH
estM
estvar_ingH <- sum(((1-(1/factel[genero == 1]))/(1/factel[genero == 1])^2)*((1/NH)*ingresos[genero == 1])^2)
estvar_ingM <- sum(((1-(1/factel[genero == 2]))/(1/factel[genero == 2])^2)*((1/NM)*ingresos[genero == 2])^2)
estdesv_ingH <- sqrt(estvar_ingH)
estdesv_ingM <- sqrt(estvar_ingM)
estdesv_ingH
estdesv_ingM
estcoefH <- estdesv_ingH/estH
estcoefM <- estdesv_ingM/estM
estcoefH
estcoefM
DH <- estdesv_ingH/sqrt(1-0.95)
DM <- estdesv_ingM/sqrt(1-0.95)
IntTchebH <- c(estH - DH, estH + DH)
IntTchebM <- c(estM - DM, estM + DM)
IntTchebH
IntTchebM
t <- qt(0.975, length(ingresos))
IntApH <- c(estH - estdesv_ingH * t, estH + estdesv_ingH * t)
IntApM <- c(estM - estdesv_ingM * t, estM + estdesv_ingM * t)
IntApH
IntApM
mean(as.numeric(datos$horas[genero == 1]))
mean(as.numeric(datos$horas[genero == 2]))
diseñoing = svydesign (id=~1, weights =~factel, data = datos )
svyhist(~ingresos, diseñoing ,main = "Histograma Ingresos", col = "plum", xlab = "", ylab = "")
diseñoH = svydesign (id=~1, weights =~factel[genero == 1], data = datos[genero ==1,])
svyhist(~ingresos[genero == 1], diseñoH, main = 'Histograma Ingresos Hombres', col = "sienna2", xlab = "", ylab = "")
diseñoM = svydesign (id=~1, weights =~factel[genero == 2], data = datos[genero == 2,])
svyhist(~ingresos[genero == 2], diseñoM, main = 'Histograma Ingresos Mujeres', col = "violetred", xlab = "", ylab = "")
svyboxplot(ingresos~1, diseñoing ,main = "Diagrama de caja Ingresos", col = "plum", xlab = "", ylab = "")
svyboxplot(ingresos[genero == 1]~1, diseñoH, main = " Diagrama de caja Ingresos Hombres", col = "sienna2", xlab = "", ylab = "")
svyboxplot(~ingresos[genero == 2]~1, diseñoM, main = "Diagrama de caja Ingresos Mujeres", col = "violetred", xlab = "", ylab = "")
riesgo_pobr <- c()
for (i in 1:nrow(datos)){
if(ingresos[i] < 6600){
xa <- 1
riesgo_pobr <- c(riesgo_pobr, xa)
}
else{
xa <- 0
riesgo_pobr <- c(riesgo_pobr, xa)
}
}
datos <- cbind(datos, riesgo_pobr)
estRP <- (1/N)*sum(riesgo_pobr*factel)
estRP
var_RP <- sum(((1-(1/factel))/(1/factel)^2) * ((1/N) * riesgo_pobr)^2)
desv_RP <- sqrt(var_RP)
desv_RP
estRPcoef <- desv_RP/estRP
estRPcoef
DRP <- desv_RP/sqrt(0.05)
IntTchebRP <- c(estRP - DRP, estRP + DRP)
IntTchebRP
IntApRP <- c(estRP - desv_RP*t, estRP + desv_RP*t)
IntApRP
TotalRP <- N*estRP
TotalRP
varTotalRP <- sum(((1-(1/factel))/(1/factel)^2)*(riesgo_pobr^2))
desv_TotalRP <- sqrt(varTotalRP)
desv_TotalRP
estcoefTotalRP <- desv_TotalRP/TotalRP
estcoefTotalRP
estRPH <- (1/NH)*sum(riesgo_pobr[genero == 1]*factel[genero == 1])
estRPM <- (1/NM)*sum(riesgo_pobr[genero == 2]*factel[genero == 2])
estRPH
estRPM
var_RPH <- sum(((1-(1/factel[genero == 1]))/(1/factel[genero == 1])^2) * ((1/NH) * riesgo_pobr[genero == 1])^2)
var_RPM <- sum(((1-(1/factel[genero == 2]))/(1/factel[genero == 2])^2) * ((1/NM) * riesgo_pobr[genero == 2])^2)
desv_RPH <- sqrt(var_RPH)
desv_RPM <- sqrt(var_RPM)
desv_RPH
desv_RPM
estRPcoefH <- desv_RPH/estRPH
estRPcoefM <- desv_RPM/estRPM
estRPcoefH
estRPcoefM
DRPH <- desv_RPH/sqrt(0.05)
DRPM <- desv_RPM/sqrt(0.05)
IntTchebRPH <- c(estRPH - DRPH, estRPH + DRPH)
IntTchebRPM <- c(estRPM - DRPM, estRPM + DRPM)
IntTchebRPH
IntTchebRPM
IntApRPH <- c(estRPH - desv_RPH*t, estRPH + desv_RPH*t)
IntApRPM <- c(estRPM - desv_RPM*t, estRPM + desv_RPM*t)
IntApRPH
IntApRPM
TotalRPH <- NH*estRPH
TotalRPM <- NM*estRPM
TotalRPH
TotalRPM
varTotalRPH <- sum(((1-(1/factel[genero == 1]))/(1/factel[genero == 1])^2)*(riesgo_pobr[genero == 1]^2))
varTotalRPM <- sum(((1-(1/factel[genero == 2]))/(1/factel[genero == 2])^2)*(riesgo_pobr[genero == 2]^2))
desv_TotalRPH <- sqrt(varTotalRPH)
desv_TotalRPM <- sqrt(varTotalRPM)
desv_TotalRPH
desv_TotalRPM
estcoefTotalRPH <- desv_TotalRPH/TotalRPH
estcoefTotalRPM <- desv_TotalRPM/TotalRPM
estcoefTotalRPH
estcoefTotalRPM
espana <- readRDS("gadm36_ESP_2_sp.rds")
madrid <- espana[espana$NAME_1 == "Comunidad de Madrid",]
madrid$cantidadH <- estRPH
madrid$cantidadM <- estRPM
texto <- "Madrid"
coords <- coordinates(madrid)
lista <- list("sp.text",coords, texto)
spplot(madrid,"cantidadH", sp.layout = lista, at = seq(from = 0, to = .25, by = .02), main = "Mapa de riesgo de pobreza hombres")
spplot(madrid,"cantidadM", sp.layout = lista, at = seq(from = 0, to = .25, by = .02), main = "Mapa de riesgo de pobreza mujeres")
estringr1 <- ingresos[neduc == 1]
estringr2 <- ingresos[neduc == 2]
estringr3 <- ingresos[neduc == 3]
Nh <- c(length(neduc[neduc == 1]), length(neduc[neduc == 2]), length(neduc[neduc == 3]))
Xh <- list(Primaria = estringr1, Secundaria = estringr2, Postsec = estringr3)
estrat <- function(Nhest, listmues, detalles = "no") {
NTot = sum(Nhest)
fpc = 1/10
Nhest = unlist(lapply(listmues, length ))
ybar = unlist(lapply(listmues, mean))
yvar = unlist(lapply(listmues, var))
media = sum(Nhest * ybar) / NTot
varmues = sum(Nhest^2 * fpc * yvar / Nhest) / (NTot^2)
conf_int = 2 * sqrt(varmues)
if(detalles == "no") {
cbind(media, varmues, conf_int) }
else{cbind(media, varmues, conf_int, Nhest, ybar, yvar)}
}
estrat(Nh, Xh, detalles = "si")
n1 <- length(neduc[neduc == 1])
n2 <- length(neduc[neduc == 2])
n3 <- length(neduc[neduc == 3])
t1 <- round(1/10*n1,0)
t2 <- round(1/10*n2,0)
t3 <- round(1/10*n3,0)
t1
t2
t3
nneducs <- c(length(neduc[neduc == 1]), length(neduc[neduc == 2]), length(neduc[neduc == 3]))
cuasvars <- c(var(ingresos[neduc == 1]),var(ingresos[neduc == 2]),var(ingresos[neduc == 3]))
n1ney <- (length(ingresos)/10) * ((length(neduc[neduc == 1]) * var(ingresos[neduc == 1]))/(sum(nneducs*cuasvars)))
n2ney <- (length(ingresos)/10) * ((length(neduc[neduc == 2]) * var(ingresos[neduc == 2]))/(sum(nneducs*cuasvars)))
n3ney <- (length(ingresos)/10) * ((length(neduc[neduc == 3]) * var(ingresos[neduc == 3]))/(sum(nneducs*cuasvars)))
n1ney
n2ney
n3ney
nestr <- length(neduc)/10
Ch <- c(5,10,15)
nopt1 <- nestr * (((length(neduc[neduc == 1]) * var(ingresos[neduc == 1]))/sqrt(Ch[1])))/(sum(nneducs * cuasvars / sqrt(Ch)))
nopt2 <- nestr * (((length(neduc[neduc == 2]) * var(ingresos[neduc == 2]))/sqrt(Ch[2])))/(sum(nneducs * cuasvars / sqrt(Ch)))
nopt3 <- nestr * (((length(neduc[neduc == 3]) * var(ingresos[neduc == 3]))/sqrt(Ch[3])))/(sum(nneducs * cuasvars / sqrt(Ch)))
nopt1
nopt2
nopt3
wh <- c(n1/nestr,n2/nestr,n3/nestr)
varprop <- ((1-(n1/length(neduc)))/nestr) * sum(cuasvars * wh)
varnney <- (1/nestr) * ((sum(wh*sqrt(cuasvars)))^2) - (1/length(neduc)) * sum(wh * cuasvars)
varprop
varnney
set.seed(123)
s <- strata(datos, "neduc", size = c(t1, t2, t3), method = "srswor")
strat_pobl = getdata(datos, s)
strat_pobl$pobtam = with(strat_pobl, ifelse(neduc == "1", n1, ifelse(neduc == "2", n2, n3)))
strat_pobl$mispesos = 1/strat_pobl$Prob
disestrat = svydesign(id=~1, weights=~mispesos, fpc=~pobtam, strat=~neduc, data=strat_pobl)
svymean(~as.numeric(ingnorm), disestrat)
coefestestrat <- 661.42/14049
coefestestrat
svyby(~as.numeric(ingnorm), ~neduc, disestrat, svymean)
coefestestrat1 <- 1037.56/11146.91
coefestestrat2 <- 1144.17/12717.6
coefestestrat3 <-1098.39/19145.94
coefestestrat1
coefestestrat2
coefestestrat3
set.seed(123)
muestreomas <- sample(length(ingresos), length(ingresos)/10)
muestramas <- datos[muestreomas,]
muesingre <- as.numeric(muestramas$ingnorm)
mueshoras <- as.numeric(muestramas$hora)
qplot(mueshoras, muesingre) + geom_point() + geom_smooth(method=lm)
razon <- function(x, y, medobs, N, n) {
r <- sum(y)/sum(x)
medR <- r * medobs
totR <- medR * N
varR <- ((1 - (n/N))/(n*(n-1))) * (sum(x^2) * r^2 + sum(y^2) - 2 * r * sum(x * y))
cat("Con el estimador de la razón R =", r, "sacamos las  estimaciones de la media =", medR, " y del total =", totR,"con varianza =", varR, "\n")
}
regresion <- function(x, y, medobs, N, n){
datos <- data.frame(x, y, N)
dis = svydesign(id=~1, fpc=~N, data=datos)
regre <- svyglm(y~x, design = dis)
estregre <- coefficients(regre)[1] + coefficients(regre)[2] * (medobs - mean(x))
esttotregre <- estregre * N
varregre <- ((1 - (n/N))/(n*(n-2))) * (sum(y^2) - n * mean(y)^2 - coefficients(regre)[2] * (sum(x * y) - n * mean(x) * mean(y)))
cat("Con el estimador de regresión sacamos para la media =", estregre, " y para el total =", esttotregre, " con varianza =", varregre, "\n")
}
razon(mueshoras,muesingre,mean(horas),length(ingresos), nestr)
regresion(mueshoras,muesingre,mean(horas),length(ingresos), nestr)
sqrt(var(ingresos[neduc == 1])
n1 <- length(neduc[neduc == 1])
